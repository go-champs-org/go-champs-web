@import '../Shared/styles/colors.scss';

.theme-switcher {
  display: flex;
  align-items: center;
  gap: 0.5rem;

  .theme-switcher-label {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--theme-text);
  }

  .theme-toggle-button {
    border: 1px solid var(--theme-border);
    background-color: var(--theme-background);
    color: var(--theme-text);

    &:hover:not(:disabled) {
      background-color: var(--theme-backgroundSecondary);
      border-color: var(--theme-primary);
    }

    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
  }

  &.theme-buttons {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.25rem;

    @media screen and (min-width: 768px) {
      flex-direction: row;
      align-items: center;
      gap: 0.5rem;
    }

    .buttons {
      margin-bottom: 0;
    }
  }
}

// CSS Custom Properties for theming
// Note: These variables are dynamically set by ThemeProvider
// No default values needed since ThemeProvider initializes them on app start

// Base theming for body and html
body {
  background-color: var(--theme-background);
  color: var(--theme-text);
  transition: background-color 0.3s ease, color 0.3s ease;
}

// Utility classes for themed elements
.themed-bg {
  background-color: var(--theme-background);
}

.themed-bg-secondary {
  background-color: var(--theme-backgroundSecondary);
}

.themed-bg-tertiary {
  background-color: var(--theme-backgroundTertiary);
}

.themed-text {
  color: var(--theme-text);
}

.themed-text-secondary {
  color: var(--theme-textSecondary);
}

.themed-text-inverted {
  color: var(--theme-textInverted);
}

.themed-border {
  border-color: var(--theme-border);
}

.themed-shadow {
  box-shadow: 0 2px 3px var(--theme-shadow), 0 0 0 1px var(--theme-shadowLight);
}

// Override Bulma variables with theme variables
.navbar {
  background-color: var(--theme-navbar);
  border-bottom-color: var(--theme-text);
  box-shadow: 0 2px 3px var(--theme-shadow), 0 0 0 1px var(--theme-shadowLight);

  .navbar-item {
    color: var(--theme-navbarText);

    &:hover {
      background-color: var(--theme-navbarHover);
      color: var(--theme-navbarText);
    }
  }

  .navbar-brand .navbar-item {
    &:hover {
      background-color: transparent;
    }
  }
}

.button {
  &.is-primary {
    background-color: var(--theme-primary);
    border-color: var(--theme-primary);
    color: var(--theme-buttonText);

    &:hover {
      background-color: var(--theme-accent);
      border-color: var(--theme-accent);
    }
  }
}

.card {
  background-color: var(--theme-background);
  color: var(--theme-text);
  box-shadow: 0 0.5em 1em -0.125em var(--theme-shadowLight),
    0 0px 0 1px var(--theme-shadowLight);
}

.table {
  background-color: var(--theme-background);
  color: var(--theme-text);
  border-collapse: separate;
  border-spacing: 0;
  border-radius: 0.5rem;
  overflow: hidden;
  box-shadow: 0 1px 3px var(--theme-shadowLight);

  th {
    color: var(--theme-textSecondary);
    font-weight: 600;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    padding: 1rem 1.5rem;
    background-color: var(--theme-backgroundSecondary);
    border-bottom: 1px solid var(--theme-border);
    vertical-align: middle;
  }

  td {
    padding: 1rem 1.5rem;
    border-bottom: 1px solid var(--theme-border);
    transition: background-color 0.2s ease;
  }

  tbody tr {
    &:hover {
      background-color: var(--theme-backgroundSecondary);
    }

    &:last-child td {
      border-bottom: none;
    }
  }

  // Striped variant
  &.is-striped {
    tbody tr:nth-child(even) {
      background-color: var(--theme-backgroundSecondary);

      &:hover {
        background-color: var(--theme-backgroundTertiary);
      }
    }
  }

  // Narrow variant
  &.is-narrow {
    th,
    td {
      padding: 0.75rem 1rem;
    }
  }
}

.input,
.textarea,
.select select {
  background-color: var(--theme-backgroundPrimary);
  border: none;
  border-bottom: 2px solid var(--theme-border);
  border-radius: 5px;
  color: var(--theme-text);
  padding: 0.75rem 1rem 0.5rem 1rem;
  transition: all 0.3s ease;

  &::placeholder {
    color: var(--theme-textPlaceholder);
  }

  &:focus {
    background-color: var(--theme-backgroundPrimary);
    box-shadow: 0 0 0 0.125rem var(--theme-primary);
    outline: none;
  }

  &:hover {
    background-color: var(--theme-backgroundSecondary);
    border-bottom-color: var(--theme-text);
  }
}

.label {
  color: var(--theme-text);
}

.title {
  color: var(--theme-text);

  &.is-1,
  &.is-2,
  &.is-3 {
    color: var(--theme-text);
  }

  &.is-4,
  &.is-5,
  &.is-6 {
    color: var(--theme-text);
  }
}

.subtitle {
  color: var(--theme-textSecondary);
  font-weight: bold;

  &.is-1,
  &.is-2,
  &.is-3 {
    color: var(--theme-text);
  }

  &.is-4,
  &.is-5,
  &.is-6 {
    color: var(--theme-textSecondary);
  }
}

.dropdown-content {
  background-color: var(--theme-background);
  box-shadow: 0 0.5em 1em -0.125em var(--theme-shadowLight);

  .dropdown-item {
    color: var(--theme-text);

    &:hover {
      background-color: var(--theme-backgroundSecondary);
    }
  }
}

.breadcrumb {
  a {
    color: var(--theme-text);

    &:hover {
      color: var(--theme-primary);
    }
  }

  li {
    &.is-active a {
      color: var(--theme-primary);
      cursor: default;
    }

    & + li::before {
      color: var(--theme-primary);
    }
  }
}

.hero-foot .footer {
  background-color: var(--theme-info);
  color: var(--theme-textInverted);
}

.has-text-primary {
  color: var(--theme-primary) !important;
}

// Dark theme specific adjustments
[data-theme='dark'] {
  .shimmer {
    background: linear-gradient(
      90deg,
      var(--theme-backgroundSecondary) 25%,
      var(--theme-backgroundTertiary) 50%,
      var(--theme-backgroundSecondary) 75%
    );
    background-size: 200% 100%;
  }
}
